//==========================================================
//
// タスクの処理 [task.cpp]
// Author : Ibuki Okusada
//
//==========================================================
#include "task.h"
#include "task_manager.h"

//==========================================================
// コンストラクタ
//==========================================================
CTask::CTask()
{
	// 値のクリア
	m_pNext = NULL;
	m_pPrev = NULL;
	m_bDeath = false;

	// リストに追加
	CTaskManager::GetInstance()->ListIn(this);
}

//==========================================================
// デストラクタ
//==========================================================
CTask::~CTask()
{

}

#if 0	// 純粋仮想関数なので通らない
//==========================================================
// 初期化処理
//==========================================================
HRESULT CTask::Init(void)
{
	return S_OK;
}
#endif

#if 0	// 純粋仮想関数なので通らない
//==========================================================
// 終了処理
//==========================================================
void CTask::Uninit(void)
{
	Release();
}
#endif

#if 0	// 純粋仮想関数なので通らない
//==========================================================
// 更新処理
//==========================================================
void CTask::Update(void)
{

}
#endif

//===============================================
// 開放処理
//===============================================
void CTask::Release(void)
{
	// 死亡状態にする
	m_bDeath = true;
}